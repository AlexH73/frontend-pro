// üìå –û—Å–Ω–æ–≤–Ω—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ TypeScript
// –°—Ç–∞—Ç–∏—á–µ—Å–∫–∞—è —Ç–∏–ø–∏–∑–∞—Ü–∏—è
// –í TS —Ç–∏–ø—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö, —Ñ—É–Ω–∫—Ü–∏–π, –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –º–æ–∂–Ω–æ –∑–∞–¥–∞–≤–∞—Ç—å —è–≤–Ω–æ.
// –û—à–∏–±–∫–∏ –≤ —Ç–∏–ø–∞—Ö –≤—ã—è–≤–ª—è—é—Ç—Å—è –µ—â—ë –Ω–∞ —ç—Ç–∞–ø–µ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏, –∞ –Ω–µ –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–¥–∞.
// –≠—Ç–æ –ø–æ–≤—ã—à–∞–µ—Ç –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å –∏ —Å–Ω–∏–∂–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–≥–æ–≤.
// –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å JavaScript
// –õ—é–±–æ–π –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JS-–∫–æ–¥ ‚Äî —ç—Ç–æ —É–∂–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π TS-–∫–æ–¥.
// –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å —Ç–∏–ø—ã –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ.
// –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π JS
// –ü–æ–¥–¥–µ—Ä–∂–∫–∞ ES6+ –∏ –±—É–¥—É—â–∏—Ö —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–≤.
// TS –∫–æ–º–ø–∏–ª–∏—Ä—É–µ—Ç –∏—Ö –≤ –±–æ–ª–µ–µ —Å—Ç–∞—Ä—ã–π JS –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å –±—Ä–∞—É–∑–µ—Ä–∞–º–∏.
// –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –û–û–ü (–æ–±—ä–µ–∫—Ç–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è)
// –ö–ª–∞—Å—Å—ã, –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã, –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –¥–æ—Å—Ç—É–ø–∞ (public, private, protected), –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–µ –∫–ª–∞—Å—Å—ã.
// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ç–∏–ø—ã
// –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ–ø–∏—Å—ã–≤–∞—Ç—å —Ñ–æ—Ä–º—É –æ–±—ä–µ–∫—Ç–æ–≤, —Å–∏–≥–Ω–∞—Ç—É—Ä—ã —Ñ—É–Ω–∫—Ü–∏–π, —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö.
// –ü–æ–¥–¥–µ—Ä–∂–∫–∞ type –∏ interface –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ç–∏–ø–æ–≤.
// –ê–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∏ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥
// –ë–ª–∞–≥–æ–¥–∞—Ä—è —Ç–∏–ø–∞–º —Ä–µ–¥–∞–∫—Ç–æ—Ä—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, VS Code) –ª—É—á—à–µ –ø–æ–Ω–∏–º–∞—é—Ç –≤–∞—à –∫–æ–¥, –ø–æ–¥—Å–∫–∞–∑—ã–≤–∞—é—Ç –º–µ—Ç–æ–¥—ã, –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞—é—Ç –æ–± –æ—à–∏–±–∫–∞—Ö.

console.log('Hello ts!');

// –ö–∞–∫ —Ç–∏–ø–∏–∑–∏—Ä–æ–≤–∞—Ç—å?
// –Ø–≤–Ω–æ vs –ù–µ—è–≤–Ω–æ
// –ü—Ä–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –º—ã —É–∫–∞–∑—ã–≤–∞–µ–º —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö:

let x: number = 10;
// x = '2'; // –û—à–∏–±–∫–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏

console.log(x);

let isDrunk: boolean = true;

// –ö–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ type
// –º—ã –º–æ–∂–µ–º –æ–±—ä—è–≤–ª—è—Ç—å —Ç–∏–ø—ã –æ—Ç–¥–µ–ª—å–Ω–æ

type Age = number;
let myAge: Age = 35;

let k: number | string = 10;
k = 'hello';

let qwerty: any;

// –ü—Ä–∏–º–µ—Ä Union type

type Pet = 'cat' | 'dog';
let petOfAlex: Pet;
petOfAlex = 'dog';
petOfAlex = 'cat';

// –ú–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å Union type

type ExtendedPet = Pet | 'bird';
let petOfAlex2: ExtendedPet = 'dog';

type Gender = 'male' | 'female';
type ExtendedGender = Gender | 'not binary person';

// –ö–∞–∫ —Ç–∏–ø–∏–∑–∏—Ä–æ–≤–∞—Ç—å –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–∏–Ω–≥–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π

let fruits: string[] = ['apple', 'orange', 'banana'];
// –æ—Å–æ–±–µ–Ω–Ω–æ –≤–∞–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å —Ç–∏–ø –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—É—Å—Ç–æ–≥–æ –º–∞—Å—Å–∏–≤–∞
let vegetables: string[] = [];
vegetables.push('tomato');
console.log(vegetables);

// –ö–∞–∫ —Ç–∏–ø–∏–∑–∏—Ä–æ–≤–∞—Ç—å –æ–±—ä–µ–∫—Ç—ã

type User = {
  firstName: string;
  isAdmin: boolean;
};

const user1: User = {
  firstName: 'Vova',
  isAdmin: false,
};

interface Monster {
  name: string;
  height: number;
  isAlive: boolean;
  isEvil: boolean;
}

const frankentein: Monster = {
  name: 'Frankenstein',
  height: 180,
  isAlive: true,
  isEvil: true,
};

interface ExtendedMonster extends Monster {
  isFlying: boolean;
}

const dracula: ExtendedMonster = {
  isFlying: true,
  name: 'Dracula',
  height: 175,
  isAlive: true,
  isEvil: true,
};

// –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–æ–ª—è

interface Food {
  title: string;
  isSweet?: boolean;
}

const pancake: Food = {
  title: 'Pancakes',
  isSweet: true,
};

const carrot: Food = {
  title: 'Carrot',
};

// –°–æ–∑–¥–∞—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≥–æ—Ä–æ–¥ City
// —Å–æ —Å–ª–µ–¥—É—é—â–∏–º–∏ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏:
// name
// population
// riversName - –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –ø–æ–ª–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ä–µ–∫–∏
// isCapital -  –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –ø–æ–ª–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª–µ —Å—Ç–æ–ª–∏—Ü–µ–π
// isTouristic - –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –ø–æ–ª–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –≥–æ—Ä–æ–¥ —Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–º

// –°–æ–∑–¥–∞–π—Ç–µ –æ–±—ä–µ–∫—Ç–æ–≤ –¥–ª—è —ç—Ç–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ —Å–¥–µ–ª–∞–π—Ç–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Ä–∞—Å—à–∏—Ä—è—é—â–∏–π –≥–æ—Ä–æ–¥
// —Å–æ —Å–ª–µ–¥—É—é—â–∏–º–∏ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏: –¥–æ–±–∞–≤–∏—Ç—å –¥–∞—Ç—É –æ—Å–Ω–æ–≤–∞–Ω–∏—è

// –ë–∞–∑–æ–≤—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å City
interface City {
  name: string;
  population: number;
  riversName?: string;
  isCapital?: boolean;
  isTouristic?: boolean;
}

type FoundationDate = string | Date | number;

// –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å –¥–∞—Ç–æ–π –æ—Å–Ω–æ–≤–∞–Ω–∏—è
interface CityWithFoundation extends City {
  foundationDate: FoundationDate;
}

// –ü—Ä–∏–º–µ—Ä—ã –æ–±—ä–µ–∫—Ç–æ–≤ –¥–ª—è City
const moscow: City = {
  name: '–ú–æ—Å–∫–≤–∞',
  population: 12678079,
  riversName: '–ú–æ—Å–∫–≤–∞-—Ä–µ–∫–∞',
  isCapital: true,
  isTouristic: true,
};

const voronezh: City = {
  name: '–í–æ—Ä–æ–Ω–µ–∂',
  population: 1057686,
  riversName: '–í–æ—Ä–æ–Ω–µ–∂',
  isTouristic: false,
};

const sochi: City = {
  name: '–°–æ—á–∏',
  population: 466078,
  isTouristic: true,
};

// –ü—Ä–∏–º–µ—Ä –æ–±—ä–µ–∫—Ç–∞ –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
const novosibirsk: CityWithFoundation = {
  name: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫',
  population: 1625631,
  riversName: '–û–±—å',
  isTouristic: false,
  foundationDate: formatFoundationDate(new Date(1893, 3, 30)), // 30 –∞–ø—Ä–µ–ª—è 1893 –≥–æ–¥–∞
};

const oldCity: CityWithFoundation = {
  name: '–î–µ—Ä–±–µ–Ω—Ç',
  population: 123720,
  riversName: '–î–µ—Ä–±–µ–Ω—Ç–∫–∞',
  isTouristic: true,
  foundationDate: 'VI –≤–µ–∫ –¥–æ –Ω.—ç.', // –ü—Ä–∏–º–µ—Ä–Ω–∞—è –¥–∞—Ç–∞ –æ—Å–Ω–æ–≤–∞–Ω–∏—è
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞ –¥–∞—Ç—ã
function formatFoundationDate(date: FoundationDate): string {
  if (date instanceof Date) {
    return date.toLocaleDateString('ru-RU', {
      year: 'numeric',
      month: 'long',
      day: 'numeric',
    });
  }
  return date.toString();
}

console.log(moscow);
console.log(voronezh);
console.log(sochi);
console.log(novosibirsk);
console.log(oldCity);

// –¢–∏–ø–∏–∑–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–π
// –ù—É–∂–Ω–æ —Ç–∏–ø–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ

function sum(a: number, b: number): number {
  return a + b;
}

const dev = (a: number, b: number) => a / b;

console.log(sum(10, 12));
console.log(dev(20, 2));

// | –°–∏—Ç—É–∞—Ü–∏—è                          | –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è            |          |
// | --------------------------------- | ----------------------- | -------- |
// | –û–ø–∏—Å–∞–Ω–∏–µ —Ñ–æ—Ä–º—ã –æ–±—ä–µ–∫—Ç–∞            | `interface` ‚úÖ           |          |
// | –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è (\`                   | `, `&\`, —É—Å–ª–æ–≤–Ω—ã–µ —Ç–∏–ø—ã) | `type` ‚úÖ |
// | –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ | `interface` ‚úÖ           |          |
// | –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤       | `type` ‚úÖ                |          |