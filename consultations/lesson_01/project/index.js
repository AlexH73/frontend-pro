// üìå –û—Å–Ω–æ–≤–Ω—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ TypeScript
// –°—Ç–∞—Ç–∏—á–µ—Å–∫–∞—è —Ç–∏–ø–∏–∑–∞—Ü–∏—è
// –í TS —Ç–∏–ø—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö, —Ñ—É–Ω–∫—Ü–∏–π, –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –º–æ–∂–Ω–æ –∑–∞–¥–∞–≤–∞—Ç—å —è–≤–Ω–æ.
// –û—à–∏–±–∫–∏ –≤ —Ç–∏–ø–∞—Ö –≤—ã—è–≤–ª—è—é—Ç—Å—è –µ—â—ë –Ω–∞ —ç—Ç–∞–ø–µ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏, –∞ –Ω–µ –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–¥–∞.
// –≠—Ç–æ –ø–æ–≤—ã—à–∞–µ—Ç –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å –∏ —Å–Ω–∏–∂–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–≥–æ–≤.
// –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å JavaScript
// –õ—é–±–æ–π –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JS-–∫–æ–¥ ‚Äî —ç—Ç–æ —É–∂–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π TS-–∫–æ–¥.
// –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å —Ç–∏–ø—ã –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ.
// –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π JS
// –ü–æ–¥–¥–µ—Ä–∂–∫–∞ ES6+ –∏ –±—É–¥—É—â–∏—Ö —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–≤.
// TS –∫–æ–º–ø–∏–ª–∏—Ä—É–µ—Ç –∏—Ö –≤ –±–æ–ª–µ–µ —Å—Ç–∞—Ä—ã–π JS –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å –±—Ä–∞—É–∑–µ—Ä–∞–º–∏.
// –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –û–û–ü (–æ–±—ä–µ–∫—Ç–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è)
// –ö–ª–∞—Å—Å—ã, –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã, –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –¥–æ—Å—Ç—É–ø–∞ (public, private, protected), –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–µ –∫–ª–∞—Å—Å—ã.
// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ç–∏–ø—ã
// –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ–ø–∏—Å—ã–≤–∞—Ç—å —Ñ–æ—Ä–º—É –æ–±—ä–µ–∫—Ç–æ–≤, —Å–∏–≥–Ω–∞—Ç—É—Ä—ã —Ñ—É–Ω–∫—Ü–∏–π, —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö.
// –ü–æ–¥–¥–µ—Ä–∂–∫–∞ type –∏ interface –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ç–∏–ø–æ–≤.
// –ê–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∏ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥
// –ë–ª–∞–≥–æ–¥–∞—Ä—è —Ç–∏–ø–∞–º —Ä–µ–¥–∞–∫—Ç–æ—Ä—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, VS Code) –ª—É—á—à–µ –ø–æ–Ω–∏–º–∞—é—Ç –≤–∞—à –∫–æ–¥, –ø–æ–¥—Å–∫–∞–∑—ã–≤–∞—é—Ç –º–µ—Ç–æ–¥—ã, –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞—é—Ç –æ–± –æ—à–∏–±–∫–∞—Ö.
console.log("Hello TS!");
let x = 10;
// x = "Hello";
console.log(x);
// –ö–∞–∫ —Ç–∏–ø–∏–∑–∏—Ä–æ–≤–∞—Ç—å?
// –Ø–≤–Ω–æ vs –ù–µ—è–≤–Ω–æ
// –ü—Ä–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–∏ÃÜ –º—ã —É–∫–∞–∑—ã–≤–∞–µ–º —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö:
let y = 100; // –ø—Ä–∏–º–µ—Ä —è–≤–Ω–æ–π —Ç–∏–ø–∏–∑–∞—Ü–∏–∏
let p;
p = "Hello";
let myAge = 29;
let k = 10;
k = "Hello";
//console.log(k);
let qwerty;
let petOfAlex = "dog";
petOfAlex = "cat";
let petOfAlex2 = "cat";
// –ö–∞–∫ —Ç–∏–ø–∏–∑–∏—Ä–æ–≤–∞—Ç—å –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–∏–Ω–≥–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–∏ÃÜ
let fruits = ["orange", "banana", "mango"];
// –æ—Å–æ–±–µ–Ω–Ω–æ –≤–∞–∂–Ω–æ —É–∫–∞–∑—ã–≤–∞—Ç—å —Ç–∏–ø –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—É—Å—Ç–æ–≥–æ –º–∞—Å—Å–∏–≤–∞
let vegetables = [];
vegetables.push("potato");
console.log(vegetables);
const user1 = {
    firstName: "Vladimir",
    isAdmin: false,
};
// –°–æ–∑–¥–∞–ª–∏ –æ–±—ä–µ–∫—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞
const frankenstein = {
    name: "Dracula",
    height: 1.7,
    isAlive: true,
    isEvil: false,
};
const dracula = {
    isFlying: true,
    name: "Dracula",
    height: 1.7,
    isAlive: false,
    isEvil: false,
};
const pancate = {
    title: "Pancakes",
    isSweet: true,
};
const carrot = { title: "Carrot" };
// –Ω–µ  —Ä—É–≥–∞–µ—Ç—Å—è, —á—Ç–æ –Ω–µ —É–∫–∞–∑–∞–ª–∏ –ø–æ–ª–µ
// isSweet, –ø–æ—Å–∫–æ–ª—å–∫—É –æ–Ω–æ —è–≤–ª—è–µ—Ç—Å—è –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º
// –¢–∏–ø–∏–∑–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–π
// –ù—É–∂–Ω–æ —Ç–∏–ø–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
function sum(a, b) {
    return a + b;
}
const dev = (a, b) => a / b;
console.log(sum(10, 12));
console.log(dev(20, 2));
function toUpper(str) {
    return str.toUpperCase();
}
console.log(toUpper("cat"));
const nine = Number("9");
const nineStr = String(9);
console.log(nine);
console.log(nineStr);
// interface —á–∞—â–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä –∫–ª–∞—Å—Å–æ–≤, API-–æ—Ç–≤–µ—Ç–æ–≤ –∏ –æ–±—ä–µ–∫—Ç–æ–≤,
//  –ø–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω–∏ –º–æ–≥—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞—Å—à–∏—Ä—è—Ç—å—Å—è –ø—Ä–∏ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–π:
// interface User {
//   name: string;
// }
// interface User {
//   age: number;
// }
// // –†–µ–∑—É–ª—å—Ç–∞—Ç:
// const user: User = {
//   name: 'John',
//   age: 30,
// };
// —Å–æ–∑–¥–∞–π—Ç–µ interface Airplane - —Å–∞–º–æ–ª–µ—Ç —Å –ø–æ–ª—è–º–∏:
// numberOfEngines - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–≤–∏–≥–∞—Ç–µ–ª–µ–π
// isJet - —Ä–µ–∞–∫—Ç–∏–≤–Ω—ã–π
// maxHeight - –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≤—ã—Å–æ—Ç–∞ –ø–æ–ª–µ—Ç–∞
// capacity - –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –ø–æ–ª–µ –≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å
// –°–æ–∑–¥–∞–π—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ç–∏–ø–∞ Airplane.
// interface Airplane {
//   numberOfEngines: number;
//   isJet: boolean;
//   maxHeight: number;
//   capacity?: number;
// }
// const airbus310: Airplane = {
//   numberOfEngines: 4,
//   isJet: false,
//   maxHeight: 11_000,
//   capacity: 100
// }
// npm install -g typescript
// npm install -g ts-node
// tsc -v
// | –°–∏—Ç—É–∞—Ü–∏—è                          | –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è            |          |
// | --------------------------------- | ----------------------- | -------- |
// | –û–ø–∏—Å–∞–Ω–∏–µ —Ñ–æ—Ä–º—ã –æ–±—ä–µ–∫—Ç–∞            | `interface` ‚úÖ           |          |
// | –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è (\`                   | `, `&\`, —É—Å–ª–æ–≤–Ω—ã–µ —Ç–∏–ø—ã) | `type` ‚úÖ |
// | –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ | `interface` ‚úÖ           |          |
// | –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤       | `type` ‚úÖ                |          |
// `npx tsc --init` - (—Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏)–ø–æ–¥–∫–ª—é—á–∞–µ—Ç typescript
// `npx tsc` - –∑–∞–ø—É—Å–∫–∞–µ—Ç —Ç—Ä–∞–Ω—Å–ø–∏–ª—è—Ü–∏—é - —Å–æ–∑–¥–∞–µ—Ç js
// `npm i` - –∑–∞–Ω–æ–≤–æ —Å–∫–∞—á–∞—Ç—å –≤—Å–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
// `npm run dev` - –∑–∞–ø—É—Å—Ç–∏—Ç —Å–∫—Ä–∏–ø—Ç
